apply plugin: 'com.android.application'
apply plugin: 'io.fabric'

/// Used to switch between ndkBuild and cmake.
def USE_CMAKE = true

/// Modify this variable to build the desired architectures.
String[] architectures = [
        'armeabi-v7a',
        // 'arm64-v8'
]

android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion

    defaultConfig {
        minSdkVersion 17
        targetSdkVersion rootProject.ext.targetSdkVersion

        applicationId 'com.ee.test.android'
        versionCode 1
        versionName '1.0.0'
        multiDexEnabled true

        // API key used for testing.
        manifestPlaceholders = [fabric_api_key: '45063244ecb24aee8a3b252cb5c6a2c549cf91f9']

        externalNativeBuild {
            if (USE_CMAKE) {
                cmake {
                    targets 'ee_x_test'
                    arguments '-DANDROID_STL=c++_static'
                    arguments '-DANDROID_TOOLCHAIN=clang'
                    cppFlags '-frtti'
                    cppFlags '-fexceptions'
                    cppFlags '-fsigned-char'
                    cppFlags '-std=c++17'
                    cppFlags '-U__SSE__'
                    cppFlags '-Wno-extern-c-compat'
                    abiFilters.addAll(architectures)
                }
            } else {
                ndkBuild {
                    targets 'ee_x_test'
                    arguments 'APP_STL=c++_static'
                    arguments 'NDK_TOOLCHAIN_VERSION=clang'
                    arguments 'APP_PLATFORM=android-16'
                    arguments 'APP_LDFLAGS=-latomic'
                    arguments '-j' + Runtime.runtime.availableProcessors()
                    cppFlags '-frtti'
                    cppFlags '-fexceptions'
                    cppFlags '-fsigned-char'
                    cppFlags '-std=c++17'
                    cppFlags '-U__SSE__'
                    cppFlags '-Wno-extern-c-compat'
                    abiFilters.addAll(architectures)
                }
            }
        }
    }

    externalNativeBuild {
        if (USE_CMAKE) {
            cmake {
                path 'src/main/jni/CMakeLists.txt'
            }
        } else {
            ndkBuild {
                path 'src/main/jni/Android.mk'
            }
        }
    }

    splits {
        abi {
            enable true
            reset()
            include architectures
            universalApk false
        }
    }

    sourceSets {
        main {
            assets.srcDir '../../Resources'
            jni.srcDirs = []
            jniLibs.srcDir 'src/main/libs'
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            debuggable false
            jniDebuggable false

            externalNativeBuild {
                if (USE_CMAKE) {
                    // TODO.
                } else {
                    ndkBuild {
                        arguments "NDK_OUT=$projectDir/src/main/obj/release"
                        cppFlags '-DNDEBUG'
                    }
                }
            }
        }
        debug {
            debuggable true
            jniDebuggable true

            externalNativeBuild {
                if (USE_CMAKE) {
                    // TODO.
                } else {
                    ndkBuild {
                        arguments "NDK_OUT=$projectDir/src/main/obj/debug"
                        cppFlags '-DCOCOS2D_DEBUG=1'
                    }
                }
            }
        }
    }

    packagingOptions {
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
    }
}

crashlytics {
    enableNdk true
    androidNdkOut 'src/main/obj'
    androidNdkLibsOut 'src/main/libs'
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation project(':libcocos2dx')
    implementation project(':ee-x-admob')
    implementation project(':ee-x-app-lovin')
    implementation project(':ee-x-facebook-ads')
    implementation project(':ee-x-iron-source')
    implementation project(':ee-x-unity-ads')
    implementation project(':ee-x-vungle')
    implementation project(':ee-x-apps-flyer')
    implementation project(':ee-x-campaign-receiver')
    implementation project(':ee-x-crashlytics')
    implementation project(':ee-x-facebook')
    implementation project(':ee-x-firebase-analytics')
    implementation project(':ee-x-firebase-dynamic-link')
    implementation project(':ee-x-firebase-messaging')
    implementation project(':ee-x-firebase-performance')
    implementation project(':ee-x-firebase-remote-config')
    implementation project(':ee-x-firebase-storage')
    implementation project(':ee-x-google-analytics')
    implementation project(':ee-x-notification')
    implementation project(':ee-x-play')
    implementation project(':ee-x-recorder')
    implementation project(':ee-x-tenjin')
    implementation project(':ee-x-twitter')

    implementation 'androidx.multidex:multidex:2.0.1'
}

apply plugin: 'com.google.gms.google-services'
